name: Deploy Backend Services

on:
  push:
    branches:
      - master
      - develop

jobs:
  build-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 17
          maven-version: 3.6.3

      - name: Add Google Credentials to Notification Service
        id: create-json-service
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "service-account.json"
          json: ${{ secrets.SERVICE_ACCOUNT }}
          dir: './notification_service/src/main/resources'

      - name: Add Google Credentials to Notification Batches
        id: create-json-batches
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "service-account.json"
          json: ${{ secrets.SERVICE_ACCOUNT }}
          dir: './notification_batches/src/main/resources'

      - name: Compile Public Library
        run: mvn clean install -f ./notification_service/public-notification/pom.xml

      - name: Compile And Build Notification Service
        run: mvn clean install package -f ./notification_service/pom.xml

      - name: Compile And Build Notification Batches
        run: mvn clean install package -f ./notification_batches/pom.xml

      - name: Save Notification Service Artifact
        uses: actions/upload-artifact@master
        with:
          name: notification_service
          path: ./notification_service/target/notification_service.jar

      - name: Save Notification Batches Artifact
        uses: actions/upload-artifact@master
        with:
          name: notification_batches
          path: ./notification_batches/target/notification_batches.jar

  deploy-services:
    runs-on: ubuntu-latest
    needs: build-services
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Notification Service Artifact
        uses: actions/download-artifact@master
        with:
          name: notification_service

      - name: Download Notification Batches Artifact
        uses: actions/download-artifact@master
        with:
          name: notification_batches

      - name: Stop Remote Processes
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          script: taskkill /f /im java.exe

      - name: Remove Logs
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          script: del ${{ secrets.REMOTE_FOLDER }}\notification_batches.log ${{ secrets.REMOTE_FOLDER }}\notification_service.log

      - name: Send Services Files To Remote Server
        if: always()
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          source: "notification_service.jar,notification_batches.jar"
          target: ${{ secrets.REMOTE_FOLDER }}

      - name: Run Notification Service
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          command_timeout: 10s
          script: cmd /c java -jar ${{ secrets.REMOTE_FOLDER }}\notification_service.jar >> ${{ secrets.REMOTE_FOLDER }}\notification_service.log

      - name: Run Notification Batches
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          command_timeout: 10s
          script: cmd /c java -jar ${{ secrets.REMOTE_FOLDER }}\notification_batches.jar >> ${{ secrets.REMOTE_FOLDER }}\notification_batches.log